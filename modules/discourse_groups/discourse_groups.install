<?php

/**
 * @file
 * The discourse groups install file.
 */

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_install().
 */
function discourse_groups_install() {
  // Generate discourse field.
  $field_name = 'field_discourse_groups';
  if (empty(FieldStorageConfig::loadByName('group', $field_name))) {
    $fieldStorage = FieldStorageConfig::create([
      'field_name'             => $field_name,
      'langcode'               => 'en',
      'entity_type'            => 'group',
      'type'                   => 'discourse_groups_field',
      'locked'                 => FALSE,
      'cardinality'            => 1,
      'translatable'           => TRUE,
      'persist_with_no_fields' => TRUE,
      'custom_storage'         => FALSE,
    ]);
    $fieldStorage->save();
  }

  $field_manager = \Drupal::service('entity_field.manager');
  $field_storage_manager = \Drupal::service('field_storage_definition.listener');
  $definition = $field_manager->getFieldStorageDefinitions('group')['field_discourse_groups'];
  $field_storage_manager->onFieldStorageDefinitionCreate($definition);
}

/**
 * Implements hook_uninstall().
 */
function discourse_groups_uninstall() {
  $types = \Drupal::entityTypeManager()
    ->getStorage('group_type')
    ->loadMultiple();
  foreach ($types as $name => $group_type) {
    // Deleting field.
    $field = FieldConfig::loadByName('group', $name, 'field_discourse_groups');
    if (!empty($field)) {
      $field->delete();
    }
  }

  // Deleting field storage.
  FieldStorageConfig::loadByName('group', 'field_discourse_groups')->delete();
}
